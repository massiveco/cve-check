package inventory

import (
	"reflect"
	"testing"
)

func TestNewItem(t *testing.T) {
	type args struct {
		pkgName string
	}
	tests := []struct {
		name    string
		args    args
		want    *Item
		wantErr bool
	}{
		{
			name: "Parse package name",
			args: args{pkgName: "xfce4-power-manager-1.6.0-r2"},
			want: &Item{
				Name: "xfce4-power-manager",
				Version: Version{
					Major: 1,
					Minor: 6,
					Patch: 0,
				},
				Source: "apk",
			},
			wantErr: false,
		},
	}
	for _, tt := range tests {
		t.Run(tt.name, func(t *testing.T) {
			got, err := NewItem(tt.args.pkgName)
			if (err != nil) != tt.wantErr {
				t.Errorf("NewItem() error = %v, wantErr %v", err, tt.wantErr)
				return
			}
			if !reflect.DeepEqual(got, tt.want) {
				t.Errorf("NewItem() = %v, want %v", got, tt.want)
			}
		})
	}
}
